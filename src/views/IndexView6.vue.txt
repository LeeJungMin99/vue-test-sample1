@RestController
@RequestMapping("/api")
public class FileController {

    @Autowired
    private AmazonS3 amazonS3;

    @Value("${aws.s3.bucket}")
    private String bucketName;

    @PostMapping("/presigned-url")
    public ResponseEntity<?> getPresignedUrls(@RequestParam String fileName, @RequestParam int partCount) {
        try {
            InitiateMultipartUploadRequest initRequest = new InitiateMultipartUploadRequest(bucketName, fileName);
            InitiateMultipartUploadResult initResponse = amazonS3.initiateMultipartUpload(initRequest);

            List<String> presignedUrls = new ArrayList<>();
            for (int i = 1; i <= partCount; i++) {
                GeneratePresignedUrlRequest generatePresignedUrlRequest = new GeneratePresignedUrlRequest(bucketName, fileName)
                        .withMethod(HttpMethod.PUT)
                        .withExpiration(new Date(System.currentTimeMillis() + 3600000))
                        .withUploadId(initResponse.getUploadId())
                        .withPartNumber(i);
                
                URL url = amazonS3.generatePresignedUrl(generatePresignedUrlRequest);
                presignedUrls.add(url.toString());
            }
            return ResponseEntity.ok(new MultipartUploadResponse(initResponse.getUploadId(), presignedUrls));
        } catch (AmazonServiceException e) {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(e.getErrorMessage());
        }
    }

    @PostMapping("/complete-multipart-upload")
    public ResponseEntity<?> completeMultipartUpload(@RequestBody CompleteMultipartUploadRequest request) {
        try {
            CompleteMultipartUploadResult result = amazonS3.completeMultipartUpload(request);
            return ResponseEntity.ok(result);
        } catch (AmazonServiceException e) {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(e.getErrorMessage());
        }
    }

    public static class MultipartUploadResponse {
        private String uploadId;
        private List<String> presignedUrls;

        public MultipartUploadResponse(String uploadId, List<String> presignedUrls) {
            this.uploadId = uploadId;
            this.presignedUrls = presignedUrls;
        }

        // Getters and Setters
    }
}